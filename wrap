#!/usr/bin/env bash

source $(dirname ${BASH_SOURCE[0]})/vip.bsh

if [ "$#" == "0" ]; then
  export PS1="(${VIP_PROJECT_NAME})[\u@\h \W] : "
  echo "Starting bash session"
  bash --norc
else
  if [ "$(type -t "$1")" == "file" ] || [ "$(type -t "$1")" == "alias" ]; then
    #If it is an alias, (like ls), I want to try to exec the real $0 first. 
    #If it fails, then an error message will be printed, but the command 
    #outside The if will catch it. So this is a source of unexpected behavior, 
    #if you want to call an alias what is named the same as a command. I 
    #decided to have this "unexpected" behavior. The solution is of course to 
    #use an alias that is named different from a command on the path
    exec "${@}"
  fi
  "${@}"
fi
