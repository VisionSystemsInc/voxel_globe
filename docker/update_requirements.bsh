#!/usr/bin/env bash

set -eu

source ${VIP_VSI_DIR}/linux/ask_question.sh

if [ "$(id -u)" == "0" ]; then
  apt-get update
  apt-get install -y ca-certificates wget --no-install-recommends
  pip install pip==8.1.2
  #This script works specifically with this version, no idea if it's forwards compatible
  groupadd user -g ${GROUP_ID} -o && \
  useradd -u ${USER_ID} -o --create-home --home-dir /home/user -g user user && \
  exec gosu user "$0" "${@}"
fi

#comma separated list of binary only packages
PIP_BINARY_ONLY="entrypoints"

function get_packages()
{
  : ${PIP=pip2}
  ${PIP} download -v -d /tmp "${@}" --no-binary :all: --only-binary "${PIP_BINARY_ONLY}" |
    tee >(cat 1>&2) |
    #this is a nasty tee hack due to https://github.com/docker/docker/issues/6880
    
    grep -E '^  Using version |^Collecting' |
    #Grep only the lines with useful information, pip 8.1.2 specific!

    sed -E -e 's|^Collecting ([^ =<>~!]+).*|\1|' | 
    #Remove all but the package name, including any "extra"s but not including version restraint

    sed '$!N;s|\n  Using||;P;D' | 
    #Combine lines starting with Using

    awk '{print $1 "@" $3}'
    #Print out the package name from the first sed and the version number which 
    #comes after [Using] version
}

#Thanks cffi for this :(
if ! command -v x86_64-linux-gnu-gcc > /dev/null; then
  cp /bin/true /tmp/x86_64-linux-gnu-gcc
  export PATH="${PATH}:/tmp"
fi

#I do NOT use the --pre option for any of the pip commands, so pre-releases are
#not considered. The easiest way to add a pre-release is to use the custom
#requirements file

function write_requirement()
{ #filename package_info(form of name@version)
  package_name=${2%%@*}
  version=${2#*@}
  if [ "${version}" == "" ]; then
    echo "${package_name}" >> "$1"
  else
    echo "${package_name}==${version}" >> "$1"
  fi
}

function update_requirements()
{ # input_requirements_file output_requirements_file [other args]
  local input=$1
  local output=$2
  shift 2
  for package in $(get_packages -r "${input}" ${@+"${@}"}); do
    write_requirement "${output}" "${package}"
  done
}

function update_main_requirements()
{
  #Strip all the version numbers so that the latests will be found
  awk -F '[<=>]' '{print $1}' "$1" > "$1.new"
  mv "$1.new" "$1"

  : > "$1.new"

  update_requirements "$1" "$1.new" --no-deps

  #Can't use wc -l here cause its buggy with blank lines, counting "newlines" not lines
  if [ "$(grep -cv '^\s*$' "$1")" == \
       "$(grep -cv '^\s*$' "$1.new")" ]; then
    mv -f "$1.new" "$1"
  else
    echo "Something went wrong"
    exit 1
  fi
}

function update_derived_requirements()
{ # main_requirements.txt custom_requirements.txt derived_requirements.txt
  echo "#Autogenerated file. Please run just update-python-requirements to update" > "$3"

  if [ -f "$2" ]; then
    update_requirements "$2" "$3"
  fi
  update_requirements "$1" "$3"
}

files2=(common flower uwsgi nginx notebook_1_2)
files3=(notebook_1_3 notebook_2)

for f in "${files2[@]}"; do
  update_main_requirements "${VIP_PROJECT_DIR}/docker/requirements_${f}.txt"
done
for f in "${files3[@]}"; do
  PIP=pip3 update_main_requirements "${VIP_PROJECT_DIR}/docker/requirements_${f}.txt"
done

for f in "${files2[@]}" "${files3[@]}"; do
  echo "### ${f} ###"
  cat "${VIP_PROJECT_DIR}/docker/requirements_${f}.txt"
done

echo "(Hint: You can edit the files before saying yes)"
ask_question "Do these requirements look ok?" requirements "y"
if [ "${requirements}" == "0" ]; then
  exit 1
fi

for f in "${files2[@]}"; do
  update_derived_requirements "${VIP_PROJECT_DIR}/docker/requirements_${f}.txt" \
                              "${VIP_PROJECT_DIR}/docker/requirements_${f}_custom.txt" \
                              "${VIP_PROJECT_DIR}/docker/requirements_${f}_derived.txt"
done

for f in "${files3[@]}"; do
  PIP=pip3 update_derived_requirements "${VIP_PROJECT_DIR}/docker/requirements_${f}.txt" \
                                       "${VIP_PROJECT_DIR}/docker/requirements_${f}_custom.txt" \
                                       "${VIP_PROJECT_DIR}/docker/requirements_${f}_derived.txt"
done